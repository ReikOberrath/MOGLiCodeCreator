@TargetFileName ${classDescriptor.simpleName}UnitTest.java # Name of output file with extension but without path
@TargetDir C:/Temp/MogliCodeCreator/_Demo/src/test/java/<package>
@CreateNew true # creates target dir if not existing and overwrites target file if existing
@NameOfValidModel DemoModel

package ${classDescriptor.package};
'
import static org.junit.Assert.*;
'
import org.junit.Before;
import org.junit.Test;
'
/**
 * Tests basic JavaBean functionality for JavaBean '${classDescriptor.simpleName}.java'
 *
 * @author generated by MOGLiCC
 */
public class ${classDescriptor.simpleName}UnitTest {

#set( $className = $TemplateStringUtility.firstToLowerCase($classDescriptor.simpleName) )


'
'	private ${classDescriptor.simpleName} ${className}1;
'	private ${classDescriptor.simpleName} ${className}2;
'

	#parse("C_setupMethod.tpl")

'
'	@Test
'	public void returnsTrueWhenCallingEqualsMethodWithEqual${classDescriptor.simpleName}Instance() {
'		assertTrue("unequal instances", ${className}1.equals(${className}1));
'		assertTrue("unequal instances", ${className}1.equals(${className}2));
'	}
'
'	@Test
'	public void buildsEqualHashCodesForEqual${classDescriptor.simpleName}Instances() {
'		assertTrue("unequal instances", ${className}1.hashCode() == ${className}1.hashCode());
'		assertTrue("unequal instances", ${className}2.hashCode() == ${className}2.hashCode());
'	}
'
'

	#parse("D_testEqualsMethods.tpl")

'
	#parse("E_testHashcodeMethods.tpl")

'
}